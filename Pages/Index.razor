@page "/"
@using Entrenamiento_Bateo.Models;
@using Entrenamiento_Bateo.BLL; 
@inject NavigationManager Nav


<div class="card">
    <div class="card-header bg-success text-center">
        <h3 style="color: white">Entrenamiento de Bateo</h3>
    </div>

    <div class="card-body">
        <div class="col">
            <div class="row" style="color:white">
                <div class="col-4 bg-info">
                    <h3>Estad&iacute;sticas</h3>
                    <h6>Pelotas bateadas @bateadores.BolasBateadas.</h6>
                    <h6>Pelotas Lanzadas @bateadores.BolasLanzadas.</h6>
                    <h6>Porcentaje de batedo @bateadores.PorcentajeBateo%.</h6>
                    <h6>Pelotas bateadas Hits @bateadores.Hits.</h6>
                    <h6>Pelotas bateadas Fouls @bateadores.Fouls.</h6>
                    <h6>Porcentaje de batedo Hits @bateadores.PorcentajeHits%.</h6>
                    <h6>Pelotas bateadas Rectas @bateadores.RectasBateadas.</h6>
                    <h6>Pelotas Lanzadas Rectas @bateadores.RectasLanzadas.</h6>
                    <h6>Porcentaje de batedo Rectas @bateadores.PorcentajeRecta%.</h6>
                    <h6>Pelotas bateadas Hits Rectas @bateadores.HitsRectas.</h6>
                    <h6>Porcentaje Hits Rectas @bateadores.PorcentajeHitsRectas%.</h6>
                    <h6>Pelotas bateadas Curvas @bateadores.CurvasBateadas.</h6>
                    <h6>Pelotas Lanzadas Curvas @bateadores.CurvasLanzadas.</h6>
                    <h6>Porcentaje de batedo Curvas @bateadores.PorcentajeCurva%.</h6>
                    <h6>Pelotas bateadas Hits Curvas @bateadores.HitsCurvas.</h6>
                    <h6>Porcentaje Hits Curvas @bateadores.PorcentajeHitsCurvas%.</h6>
                </div>
                <div class="col-4 bg-info">
                    <br /><br />
                    <h6>Pelotas bateadas Sliders @bateadores.SlidersBateadas.</h6>
                    <h6>Pelotas Lanzadas Sliders @bateadores.SlidersLanzados.</h6>
                    <h6>Porcentaje de batedo Sliders @bateadores.PorcentajeSlider%.</h6>
                    <h6>Pelotas bateadas Hits Sliders @bateadores.HitsSliders.</h6>
                    <h6>Porcentaje Hits Sliders @bateadores.PorcentajeHitsSliders%.</h6>
                    <h6>Pelotas bateadas Cambios @bateadores.CambiosBateados.</h6>
                    <h6>Pelotas Lanzadas Cambios @bateadores.CambiosLanzados.</h6>
                    <h6>Porcentaje de batedo Cambios @bateadores.PorcentajeCambio%.</h6>
                    <h6>Pelotas bateadas Hits Cambios @bateadores.HitsCambios.</h6>
                    <h6>Porcentaje Hits Cambios @bateadores.PorcentajeHitsCambios%.</h6>
                    <h6>Pelotas bateadas Nudillos @bateadores.NudillosBateados.</h6>
                    <h6>Pelotas Lanzadas Nudillos @bateadores.NudillosLanzados.</h6>
                    <h6>Porcentaje de batedo Nudillos @bateadores.PorcentajeNudillo%.</h6>
                    <h6>Pelotas bateadas Hits Nudillos @bateadores.HitsNudillos.</h6>
                    <h6>Porcentaje Hits Nudillos @bateadores.PorcentajeHitsNudillos%.</h6>
                    <h6>Estado de Jugador @bateadores.Estado.</h6>
                </div>
                <div class="col-4 text-center">
                    <br />
                    <br />
                    <br />
                    <h6>Tipo de Lanzamiento: @Tipo.</h6>
                    <h6>Velocidad del lanzamiento: @Velocidad m/h.</h6>
                    <img class="figure-img img-fluid rounded text-center" src="Gif/prueba de sic.gif" style="height:269.33px;width:378.8px" />
                </div>
            </div>
        </div>
    </div>

    <div class="card-footer">
        <button class="btn btn-primary" @onclick="Empezar">Iniciar</button>
        <button class="btn btn-dark" @onclick="PasarDatos">Resultados</button>
    </div>

</div>


@code{

    private Random random = new Random();
    private Bateadores bateadores = new Bateadores();

    private int sano;
    private int covid;
    private int gripe;
    private int resaca;
    private int trasnocho;
    private int condicionAfecta;

    private int Velocidad;
    private string Tipo;

    private void Picheo()
    {
        int tipo = random.Next(1, 6);
        int velocidad;

        int picheo = 0;

        if (tipo == 1)//recta
        {
            picheo = 1;
            velocidad = random.Next(90, 100);
            bateadores.RectasLanzadas++;
            bateadores.BolasLanzadas++;
            recibirBateo("Recta", velocidad);
        }
        else if (tipo == 2)//curvas
        {
            picheo = 2;
            velocidad = random.Next(79, 87);
            bateadores.CurvasLanzadas++;
            bateadores.BolasLanzadas++;
            recibirBateo("Curva", velocidad);
        }
        else if (tipo == 3)//slider
        {
            picheo = 3;
            velocidad = random.Next(82, 92);
            bateadores.SlidersLanzados++;
            bateadores.BolasLanzadas++;
            recibirBateo("Slider", velocidad);
        }
        else if (tipo == 4)//cambio
        {
            picheo = 4;
            velocidad = random.Next(80, 88);
            bateadores.CambiosLanzados++;
            bateadores.BolasLanzadas++;
            recibirBateo("Cambio", velocidad);
        }
        else if (tipo == 5)//nudillo
        {
            picheo = 5;
            velocidad = random.Next(69, 75);
            bateadores.NudillosLanzados++;
            bateadores.BolasLanzadas++;
            recibirBateo("Nudillo",velocidad);
        }

        Bateo(picheo);
    }

    private void recibirBateo(string tipo, int velocidad)
    {
        Tipo = tipo;
        Velocidad = velocidad;
    }

    private void EstadoBateador()
    {
        int aleatorio = random.Next(1, 101);

        if ((aleatorio >= 1 && aleatorio <= 10) || (aleatorio >= 91 && aleatorio <= 100) || (aleatorio >= 16 && aleatorio <= 25)
             || (aleatorio >= 56 && aleatorio <= 60) || (aleatorio >= 31 && aleatorio <= 50) || (aleatorio > 61 && aleatorio <= 85))
        {
            sano++;
            bateadores.Afeccion = 1;
            bateadores.Estado = "Sano";
        }
        else if (aleatorio >= 51 && aleatorio <= 55)
        {
            covid++;
            bateadores.Afeccion = 2;
            bateadores.Estado = "Recuperación de Covid";
        }
        else if (aleatorio >= 26 && aleatorio <= 30)
        {
            gripe++;
            bateadores.Afeccion = 3;
            bateadores.Estado = "Gripe Leve";
        }
        else if (aleatorio >= 11 && aleatorio <= 15)
        {
            resaca++;
            bateadores.Afeccion = 4;
            bateadores.Estado = "Resaca por Alcohol";
        }
        else if (aleatorio >= 86 && aleatorio <= 90)
        {
            trasnocho++;
            bateadores.Afeccion = 5;
            bateadores.Estado = "Trasnocho";
        }
    }

    private void BateoSano(int picheo)
    {
        int aleatorio = random.Next(1, 101);
        int direccion = random.Next(1, 101);
        //int i = 0;

        if (picheo == 1)//recta
        {
            if ((aleatorio >= 1 && aleatorio <= 40) || (aleatorio >= 51 && aleatorio <= 90))//80%
            {
                if ((direccion >= 1 && direccion <= 30) || (direccion >= 41 && direccion <= 80) || (direccion >= 91 && direccion <= 100))
                {
                    bateadores.HitsRectas++;
                    bateadores.Hits++;
                }
                else
                {
                    bateadores.Fouls++;
                }
                bateadores.BolasBateadas++;
                bateadores.RectasBateadas++;
            }
        }
        if (picheo == 2)//curva
        {
            if (aleatorio >= 1 && aleatorio <= 35 || aleatorio >= 51 && aleatorio <= 90)//75%
            {
                if ((direccion >= 10 && direccion <= 35) || (direccion >= 61 && direccion <= 85)
                    || (direccion >= 41 && direccion <= 55) || (direccion >= 91 && direccion <= 100))
                {
                    bateadores.HitsCurvas++;
                    bateadores.Hits++;
                }
                else
                {
                    bateadores.Fouls++;
                }
                bateadores.BolasBateadas++;
                bateadores.CurvasBateadas++;
            }
        }
        if (picheo == 3)//slider
        {
            if (aleatorio >= 11 && aleatorio <= 50 || aleatorio >= 71 && aleatorio <= 100)//70%
            {
                if ((direccion >= 1 && direccion <= 30) || (direccion >= 41 && direccion <= 60) || (direccion >= 71 && direccion <= 90))
                {
                    bateadores.HitsSliders++;
                    bateadores.Hits++;
                }
                else
                {
                    bateadores.Fouls++;
                }
                bateadores.BolasBateadas++;
                bateadores.SlidersBateadas++;
            }
        }
        if (picheo == 4)//cambio
        {
            if (aleatorio >= 1 && aleatorio <= 30 || aleatorio >= 51 && aleatorio <= 90)//70%
            {
                if ((direccion >= 16 && direccion <= 30) || (direccion >= 41 && direccion <= 75) || (direccion >= 81 && direccion <= 100))
                {
                    bateadores.HitsCambios++;
                    bateadores.Hits++;
                }
                else
                {
                    bateadores.Fouls++;
                }
                bateadores.BolasBateadas++;
                bateadores.CambiosBateados++;
            }
        }
        if (picheo == 5)//nudillo
        {
            if (aleatorio >= 1 && aleatorio <= 30 || aleatorio >= 61 && aleatorio <= 90)//60%
            {
                if ((direccion >= 11 && direccion <= 30) || (direccion >= 41 && direccion <= 60) || (direccion >= 81 && direccion <= 100))
                {
                    bateadores.HitsNudillos++;
                    bateadores.Hits++;
                }
                else
                {
                    bateadores.Fouls++;
                }
                bateadores.BolasBateadas++;
                bateadores.NudillosBateados++;
            }
        }
    }

    private void BateoAfectado(int picheo)
    {
        int aleatorio = random.Next(1, 101);
        int direccion = random.Next(1, 101);
        //int i = 0;

        if (picheo == 1)//recta
        {
            if ((aleatorio >= 1 && aleatorio <= 40) || (aleatorio >= 61 && aleatorio <= 90))//70%
            {
                if ((direccion >= 1 && direccion <= 30) || (direccion >= 41 && direccion <= 80))
                {
                    bateadores.HitsRectas++;
                    bateadores.Hits++;
                }
                else
                {
                    bateadores.Fouls++;
                }
                bateadores.BolasBateadas++;
                bateadores.RectasBateadas++;
            }
        }
        if (picheo == 2)//curva
        {
            if (aleatorio >= 11 && aleatorio <= 35 || aleatorio >= 51 && aleatorio <= 90)//65%
            {
                if ((direccion >= 10 && direccion <= 35) || (direccion >= 61 && direccion <= 75)
                    || (direccion >= 41 && direccion <= 55) || (direccion >= 91 && direccion <= 100))
                {
                    bateadores.HitsCurvas++;
                    bateadores.Hits++;
                }
                else
                {
                    bateadores.Fouls++;
                }
                bateadores.BolasBateadas++;
                bateadores.CurvasBateadas++;
            }
        }
        if (picheo == 3)//slider
        {
            if (aleatorio >= 11 && aleatorio <= 50 || aleatorio >= 71 && aleatorio <= 90)//60%
            {
                if ((direccion >= 1 && direccion <= 30) || (direccion >= 41 && direccion <= 60) || (direccion >= 81 && direccion <= 90))
                {
                    bateadores.HitsSliders++;
                    bateadores.Hits++;
                }
                else
                {
                    bateadores.Fouls++;
                }
                bateadores.BolasBateadas++;
                bateadores.SlidersBateadas++;
            }
        }
        if (picheo == 4)//cambio
        {
            if (aleatorio >= 21 && aleatorio <= 40 || aleatorio >= 51 && aleatorio <= 90)//60%
            {
                if ((direccion >= 16 && direccion <= 30) || (direccion >= 51 && direccion <= 75) || (direccion >= 81 && direccion <= 100))
                {
                    bateadores.HitsCambios++;
                    bateadores.Hits++;
                }
                else
                {
                    bateadores.Fouls++;
                }
                bateadores.BolasBateadas++;
                bateadores.CambiosBateados++;
            }
        }
        if (picheo == 5)//nudillo
        {
            if (aleatorio >= 1 && aleatorio <= 30 || aleatorio >= 61 && aleatorio <= 80)//50%
            {
                if ((direccion >= 11 && direccion <= 30) || (direccion >= 41 && direccion <= 60) || (direccion >= 81 && direccion <= 90))
                {
                    bateadores.HitsNudillos++;
                    bateadores.Hits++;
                }
                else
                {
                    bateadores.Fouls++;
                }
                bateadores.BolasBateadas++;
                bateadores.NudillosBateados++;
            }
        }
    }

    private void Bateo(int picheo)
    {
        if (bateadores.Afeccion==1)
        {
            BateoSano(picheo);
        }
        if(bateadores.Afeccion != 1 && bateadores.BolasLanzadas <= 150)
        {
            BateoAfectado(picheo);
        }
        if (bateadores.Afeccion != 1 && bateadores.BolasLanzadas > 150)
        {
            BateoSano(picheo);
        }
    }

    private void Contacto()
    {
        @*double bolaslanzadas = bateadores.RectasLanzadas + bateadores.CurvasLanzadas + bateadores.SlidersLanzados
            + bateadores.CambiosLanzados + bateadores.NudillosLanzados;*@

    bateadores.PorcentajeBateo = Math.Round((bateadores.BolasBateadas / bateadores.BolasLanzadas) * 100);
    bateadores.PorcentajeRecta = Math.Round((bateadores.RectasBateadas / bateadores.RectasLanzadas) * 100);
    bateadores.PorcentajeCurva = Math.Round((bateadores.CurvasBateadas / bateadores.CurvasLanzadas) * 100);
    bateadores.PorcentajeSlider = Math.Round((bateadores.SlidersBateadas / bateadores.SlidersLanzados) * 100);
    bateadores.PorcentajeCambio = Math.Round((bateadores.CambiosBateados / bateadores.CambiosLanzados) * 100);
    bateadores.PorcentajeNudillo = Math.Round((bateadores.NudillosBateados / bateadores.NudillosLanzados) * 100);
    bateadores.PorcentajeHits = Math.Round((bateadores.Hits / bateadores.BolasBateadas) * 100);
    bateadores.PorcentajeHitsRectas = Math.Round((bateadores.HitsRectas / bateadores.RectasBateadas) * 100);
    bateadores.PorcentajeHitsCurvas = Math.Round((bateadores.HitsCurvas / bateadores.CurvasBateadas) * 100);
    bateadores.PorcentajeHitsSliders = Math.Round((bateadores.HitsSliders / bateadores.SlidersBateadas) * 100);
    bateadores.PorcentajeHitsCambios = Math.Round((bateadores.HitsCambios / bateadores.CambiosBateados) * 100);
    bateadores.PorcentajeHitsNudillos = Math.Round((bateadores.HitsNudillos / bateadores.NudillosBateados) * 100);
}

private int CondicionQueMasAfecta()
{
    if ((covid > gripe) && (covid > resaca) && (covid > trasnocho))
    {
        return 2;
    }
    if ((gripe > covid) && (gripe > resaca) && (gripe > trasnocho))
    {
        return 3;
    }
    if ((resaca > gripe) && (resaca > covid) && (resaca > trasnocho))
    {
        return 4;
    }
    if ((trasnocho > gripe) && (trasnocho > resaca) && (trasnocho > covid))
    {
        return 5;
    }
    else
        return 6;
}

private  void PasarDatos()
{
    Nav.NavigateTo($"/resultado/{condicionAfecta}");
}

private async Task Empezar()
{
    bool guardado;

    for(int x=0; x<20; x++)
    {
        EstadoBateador();
        for (int i = 0; i < 400; i++)
        {
            Picheo();
            Contacto();

            StateHasChanged();
            await Task.Delay(200);
        }
        StateHasChanged();
        await Task.Delay(10000);
        guardado = BateadoresBLL.Guardar(bateadores);
        bateadores = new Bateadores();
    }   
    condicionAfecta = CondicionQueMasAfecta();
    bateadores.Afeccion = 0;
}
}
